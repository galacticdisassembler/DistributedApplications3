name: Docker Image CI

on:
  push:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
            # enable-AzPSSession: true
        
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - run: | 
            docker build . --file Dockerfile --tag ${{ secrets.REGISTRY_NAME}}/node-web-app:${{ github.sha }} --tag ${{ secrets.REGISTRY_NAME}}/node-web-app:latest 
            docker push ${{ secrets.REGISTRY_NAME}}/node-web-app --all-tags 

        - name: HashiCorp - Setup Terraform
          uses: hashicorp/setup-terraform@v1.2.1

        - run: terraform init

        - run: terraform plan

        # Remember kids: applying terraform from a CI is a big nono.
        # Don't do that. Only villains do that.
        # Your CSIO will come after you.
        # - run: terraform apply -auto-approve

        - name: 'Deploy to Azure Container Instances'
          uses: 'azure/aci-deploy@v1'
          with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.sha }}
            image: ${{ secrets.REGISTRY_NAME}}/node-web-app:latest
            registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            registry-username: ${{ secrets.REGISTRY_USERNAME }}
            registry-password: ${{ secrets.REGISTRY_PASSWORD }}
            name: cool-node-app
            location: 'west us'

